{% extends 'layouts/base.html.twig' %}

{% block title %}Page d'accueil{% endblock %}

{% block content %}
    <section id="seats" class="py-20 bg-gray-800">
        <div class="max-w-7xl mx-auto text-center">
            <h2 class="text-3xl font-extrabold text-yellow-500 mb-6">Choisissez votre place</h2>
            <p class="text-base text-white mb-4">Sélectionnez les sièges que vous souhaitez réserver pour cette séance.</p>

            <!-- Grille des sièges -->
            <div class="grid grid-cols-1 justify-center mb-6">
                {% for row in ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M'] %}
                    <div class="flex justify-center space-x-2 mb-2">
                        {% for col in 1..14 %}
                            <button class="seat select-seat" data-seat="{{ row }}{{ col }}" data-available="{{ col % 2 == 0 }}">
                                <svg fill="#e1bc05" height="100px" width="100px" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 511.9 511.9">
                                    <path d="M490.797,170.7h-42.7c-11.8,0-21.3,9.6-21.3,21.3s9.5,21.3,21.3,21.3h21.3V320h-22c-2.9-22.4-20.9-40-43.5-42.2 l-14.7-199.4c-2.5-43.9-39.8-78.4-84.8-78.4h-96.5c-45.1,0-82.4,34.5-84.9,78.1l-14.7,199.7c-22.7,2.2-40.7,19.8-43.6,42.2h-22 V213.3h21.4c11.8,0,21.3-9.6,21.3-21.3s-9.5-21.3-21.3-21.3h-42.7c-11.8,0-21.3,9.5-21.3,21.3v149.3c0,11.8,9.5,21.3,21.3,21.3 h42.7V384c0,11.8,9.5,21.3,21.3,21.3h21.3v85.3c0,11.8,9.5,21.3,21.3,21.3h64c11.8,0,21.3-9.6,21.3-21.3v-85.3h85.3v85.3 c0,11.8,9.5,21.3,21.3,21.3h64c11.8,0,21.3-9.6,21.3-21.3v-85.3h21.3c11.8,0,21.3-9.6,21.3-21.3V192C512.097,180.2,502.597,170.7,490.797,170.7z M170.797,469.3h-21.3v-64h21.3V469.3z M362.797,469.3h-21.3v-64h21.3V469.3z"></path>
                                </svg>
                            </button>
                        {% endfor %}
                    </div>
                {% endfor %}
            </div>

            <!-- Encadrés d'information -->
            <div id="seat-info" class="hidden bg-white text-black text-sm font-semibold py-2 px-3 rounded-lg shadow-md absolute"></div>

            <!-- Représentation de l'écran -->
            <div class="flex justify-center items-center mb-8">
                <div class="w-2/3 bg-gray-600 h-6 text-white font-semibold rounded-lg">
                    <p>Écran</p>
                </div>
            </div>

            <!-- Confirmation de sélection -->
            <div class="mt-6">
                <p class="text-white">Sièges sélectionnés : <span id="selected-seats" class="font-semibold"></span></p>
                <button class="bg-yellow-500 hover:bg-yellow-400 text-black py-2 px-4 rounded-full text-lg font-semibold transition-all mt-4">
                    Confirmer la réservation
                </button>
            </div>
        </div>
    </section>

    <script>
        const seatInfo = document.getElementById('seat-info');
        const seats = document.querySelectorAll('.select-seat');

        seats.forEach(seat => {
            seat.addEventListener('mouseenter', (e) => {
                const seatNumber = e.target.dataset.seat;
                const isAvailable = e.target.dataset.available === 'true';

                seatInfo.textContent = `${seatNumber} - ${isAvailable ? 'Disponible' : 'Indisponible'}`;
                seatInfo.style.left = `${e.clientX + 20}px`; // Affiche l'encadré à droite
                seatInfo.style.top = `${e.clientY - 20}px`;
                seatInfo.classList.remove('hidden');
            });

            seat.addEventListener('mouseleave', () => {
                seatInfo.classList.add('hidden');
            });
        });

        // Gestion de la sélection des sièges
        const selectedSeatsDisplay = document.getElementById('selected-seats');
        let selectedSeats = [];

        seats.forEach(button => {
            button.addEventListener('click', () => {
                if (button.classList.contains('select-seat-selected')) {
                    button.classList.remove('select-seat-selected');
                    selectedSeats = selectedSeats.filter(seat => seat !== button.dataset.seat);
                } else {
                    button.classList.add('select-seat-selected');
                    selectedSeats.push(button.dataset.seat);
                }
                selectedSeatsDisplay.textContent = selectedSeats.join(', ');
            });
        });
    </script>

    <style>
        .select-seat:hover svg {
            transform: scale(1.3);
            transition: transform 0.2s ease-in-out;
        }

        #seat-info {
            position: absolute;
            pointer-events: none;
            z-index: 50;
        }

        .seat {
            background-color: transparent;
            border: none;
            cursor: pointer;
        }

        .seat svg {
            width: 1rem;
            height: 1rem;
        }

        .select-seat-selected svg {
            fill: green;
        }

        @media (max-width: 768px) {
            .seat svg {
                width: 1.5rem;
                height: 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .seat svg {
                width: 1.25rem;
                height: 1.25rem;
            }
        }
    </style>
{% endblock %}

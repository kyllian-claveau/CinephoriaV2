name: Deploy Symfony to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Docker and Docker Compose on VPS
        run: |
          ssh -o StrictHostKeyChecking=no debian@5.196.21.36 "sudo apt-get update && sudo apt-get install -y docker.io docker-compose git"

      - name: Remove existing directory and clone repository
        run: |
          ssh -o StrictHostKeyChecking=no debian@5.196.21.36 "sudo rm -rf /var/www/cinephoria && sudo git clone https://github.com/kyllian-claveau/CinephoriaV2.git /var/www/cinephoria"

      - name: Create .env file on VPS
        run: |
          ssh -o StrictHostKeyChecking=no debian@5.196.21.36 "echo -e 'APP_ENV=prod\nAPP_SECRET=${{ secrets.APP_SECRET }}\nDATABASE_URL=${{ secrets.DATABASE_URL }}\nMESSENGER_TRANSPORT_DSN=${{ secrets.MESSENGER_TRANSPORT_DSN }}\nMAILER_DSN=${{ secrets.MAILER_DSN }}\nJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}\nJWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}\nJWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}\nMONGODB_DSN=${{ secrets.MONGODB_DSN }}\nMONGODB_DB=${{ secrets.MONGODB_DB }}\nMONGODB_COLLECTION=${{ secrets.MONGODB_COLLECTION }}' | sudo tee /var/www/cinephoria/.env > /dev/null"

      - name: Deploy with Docker Compose
        run: |
          ssh debian@5.196.21.36 "cd /var/www/cinephoria && sudo docker-compose down -v --rmi all --remove-orphans && sudo docker-compose build --no-cache && sudo docker-compose up -d --force-recreate"
